package br.com.salaarcoiris.jdbc;

import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.JsonObject;

import java.sql.PreparedStatement;
import java.sql.ResultSet;

import br.com.salaarcoiris.jdbcinterface.AlunoDAO;
import br.com.salaarcoiris.modelo.Aluno;

public class JDBCAlunoDAO implements AlunoDAO{

	private Connection conexao;

	public JDBCAlunoDAO(Connection conexao) {
		this.conexao = conexao;
	}

	public boolean inserir (Aluno aluno) {
		String comando = " INSERT INTO aluno (cpfAluno, nomeAluno, dataNasc, email, responsavel_idresponsavel) "
				+ "values (?,?,?,?,?);";

		PreparedStatement p;

		try {

			p = this.conexao.prepareStatement(comando);

			p.setInt(1, aluno.getCpfAluno());
			p.setString(2, aluno.getNomeAluno());
			p.setString(3, aluno.getNascAluno());
			p.setString(4, aluno.getEmail());
			p.setInt(5, aluno.getIdResp());

			p.execute();

		}catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}
	
	public List<JsonObject>buscar(String nome){
		String comando = "SELECT * "+
				"FROM aluno ";
		if (nome != "") {
			comando += "WHERE aluno.nomeAluno LIKE '%"+ nome + "%' "; 
		}
		comando += "ORDER BY aluno.nomeAluno ASC";		
		List<JsonObject> listaAlunos = new ArrayList<JsonObject>();
		JsonObject aluno = null;

		try {

			Statement stmt = conexao.createStatement();
			ResultSet rs = stmt.executeQuery(comando);

			while(rs.next()) {

				int id = rs.getInt("idaluno");
				int cpfAluno = rs.getInt("cpfAluno");
				String nomeAluno = rs.getString("nomeAluno");
				String dataNasc = rs.getString("dataNasc");
				String email = rs.getString("email");
				int idResponsavel = rs.getInt("responsavel_idresponsavel");
				


				aluno = new JsonObject();
				aluno.addProperty("idaluno", id);				
				aluno.addProperty("cpfAluno", cpfAluno);
				aluno.addProperty("nomeAluno", nomeAluno);
				aluno.addProperty("dataNasc", dataNasc);
				aluno.addProperty("email", email);
				aluno.addProperty("idResponsavel", idResponsavel);

				listaAlunos.add(aluno);
			}

		}catch (Exception e) {
			e.printStackTrace();
		}
		return listaAlunos;
	}
	
	// DELETE - aluno
	
	public boolean deletar(int idaluno) {
		String comando = "DELETE FROM aluno WHERE idAluno = ?";
		PreparedStatement p;
		try {
			p=this.conexao.prepareStatement(comando);
			p.setInt(1, idAluno);
			p.execute();
		}catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}
	
	// UPDATE - aluno
	
	public Aluno checkIdA(int alunoId) {
		String comando = "SELECT * FROM aluno WHERE idAluno = ?";
		Aluno aluno = new Aluno();
		try {
			PreparedStatement p = this.conexao.prepareStatement(comando);
			p.setInt(1, alunoId);
			ResultSet rs = p.executeQuery();
			while (rs.next()) {
				int id = rs.getInt("idAluno");
				String primNomeA = rs.getString("primeirNomeAluno");
				String sobrenomeA = rs.getString("sobreNomeAluno");
				String escola = rs.getString("Escola");
				String dataN = rs.getString("dataNascimento");
				
				aluno.setPrimNomeA(primNomeA);
				aluno.setSobrenomeA(sobrenomeA);
				aluno.setEscola(escola);
				aluno.setDataNas(dataN);
				
				aluno.setAlunoId(id);
				

			}
		}catch (Exception e) {
			e.printStackTrace();
		}
		return aluno;
	}
		
		public boolean alterarA(Aluno aluno) {		
			String comando = "UPDATE aluno "
					+ "SET primeirNomeAluno=?, sobreNomeAluno=?, Escola=?, dataNascimento=? "
					+ " WHERE idAluno=?";
			PreparedStatement p;
			try {
				
				
				
				p = this.conexao.prepareStatement(comando);
				p.setString(1, aluno.getPrimNomeA());
				p.setString(2, aluno.getSobrenomeA());
				p.setString(3, aluno.getEscola());
				p.setString(4, aluno.getDataNas());
				p.setInt(5, aluno.getAlunoId());

				p.executeUpdate();

			}catch (SQLException e) {
				e.printStackTrace();
				return false;
			}
			return true;
		}
}